input {
  udp {
    port  => 5000
    type  => syslog
  }
  tcp {
    port  => 5001
    codec => json
    type  => clientlog
  }
}

filter {
  if [type] == "syslog" {
    grok {
       match => { "message" => "\d+ <\d+>\[%{TIMESTAMP_ISO8601:log_timestamp}.+%{LOGLEVEL:avi_loglevel}: \] \[%{DATA:avi_object}: reason: %{DATA:avi_reason}\] At %{TIMESTAMP_ISO8601:avi_timestamp} event %{WORD:avi_event} .+tenant %{WORD:avi_tenant} as %{GREEDYDATA:message}" }
       named_captures_only => true
       overwrite => ["message"]
    }
    mutate { add_field => { "[@metadata][target_index]" => "avisyslog-%{+YYYY.MM.dd}" } }
  }
  else if [type] == "clientlog" {
    mutate { add_field => { "[@metadata][target_index]" => "aviclientlog-%{+YYYY.MM.dd}" } }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "%{[@metadata][target_index]}"
  }
  stdout { codec => rubydebug }
}

